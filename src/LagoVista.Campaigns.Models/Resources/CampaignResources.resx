<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Campaign_BudgetAllocated" xml:space="preserve">
    <value>Budget Allocated</value>
  </data>
  <data name="Campaign_BudgetAllocated_Help" xml:space="preserve">
    <value>The Budget Allocated amount is the total budget amount that is available for all the promotions</value>
  </data>
  <data name="Campaign_Description" xml:space="preserve">
    <value>A campaign is an effort to promote something that will help grow an initiative for our company.</value>
  </data>
  <data name="Campaign_EndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="Campaign_Promotions" xml:space="preserve">
    <value>Promotions</value>
  </data>
  <data name="Campaign_StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="Campaign_Title" xml:space="preserve">
    <value>Campaign</value>
  </data>
  <data name="Campaign_TotalBudget" xml:space="preserve">
    <value>Total Budget</value>
  </data>
  <data name="Campaign_TotalBudget_Help" xml:space="preserve">
    <value>The Total Budget is the accumulated budget of all the promotions.</value>
  </data>
  <data name="Campaign_TotalSpend" xml:space="preserve">
    <value>Total Spend</value>
  </data>
  <data name="Common_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Common_Icon" xml:space="preserve">
    <value>Icon</value>
  </data>
  <data name="Common_IsPublic" xml:space="preserve">
    <value>Is Public</value>
  </data>
  <data name="Common_IsRequired" xml:space="preserve">
    <value>Is Required</value>
  </data>
  <data name="Common_Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="Common_Key_Help" xml:space="preserve">
    <value>The key is used to identify this item in scripts and must be unique with respect to it's parent. One a key has been assigned, it can not be changed.</value>
  </data>
  <data name="Common_Key_Validation" xml:space="preserve">
    <value>The key must use only letters and numbers, and must be lowercase and must be between 3 and 20 characters.</value>
  </data>
  <data name="Common_LastUpdated" xml:space="preserve">
    <value>Last Updated</value>
  </data>
  <data name="Common_LastUpdatedBy" xml:space="preserve">
    <value>Last Updated By</value>
  </data>
  <data name="Common_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Post_Account" xml:space="preserve">
    <value>Social Media Account</value>
  </data>
  <data name="Post_Account_Watermark" xml:space="preserve">
    <value>-select social media account-</value>
  </data>
  <data name="Post_Content" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="Post_SiteContent" xml:space="preserve">
    <value>Site Content</value>
  </data>
  <data name="Post_SiteContent_Help" xml:space="preserve">
    <value>Optionally select site content that can be associated with this social media post.</value>
  </data>
  <data name="Post_SiteContent_Watermark" xml:space="preserve">
    <value>-select associated site content-</value>
  </data>
  <data name="Post_Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Promotion_Budget" xml:space="preserve">
    <value>Budget</value>
  </data>
  <data name="Promotion_Description" xml:space="preserve">
    <value>A promotion is a specific tactical initiative that will help support campaign</value>
  </data>
  <data name="Promotion_Posts" xml:space="preserve">
    <value>Posts</value>
  </data>
  <data name="Promotion_Spend" xml:space="preserve">
    <value>Spend</value>
  </data>
  <data name="Promotion_Title" xml:space="preserve">
    <value>Promotion</value>
  </data>
  <data name="SocialMediaPost_Description" xml:space="preserve">
    <value>A Social Media Post is a content to be presented on Social Media to drive users to the Softwar Logistics web site.</value>
  </data>
  <data name="SocialMediaPost_Title" xml:space="preserve">
    <value>Social Media Post</value>
  </data>
  <data name="SocialMedia_Account" xml:space="preserve">
    <value>Social Media Account</value>
  </data>
  <data name="SocialMedia_AccountId" xml:space="preserve">
    <value>Account Id</value>
  </data>
  <data name="SocialMedia_AccountKey" xml:space="preserve">
    <value>Account Key</value>
  </data>
  <data name="SocialMedia_AccountName" xml:space="preserve">
    <value>Account Name</value>
  </data>
  <data name="SocialMedia_Account_Help" xml:space="preserve">
    <value>A Social Media Account is an account where content can be posted</value>
  </data>
</root>